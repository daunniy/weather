{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react_project\\\\src\\\\components\\\\CitySelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityMapping = {\n  '서울': 'Seoul',\n  '인천': 'Incheon',\n  '부산': 'Busan'\n  // 추가 도시...\n};\nfunction CitySelector({\n  onCitySelect\n}) {\n  _s();\n  const [cities] = useState(Object.keys(cityMapping)); // 도시 목록\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어\n  const [filteredCities, setFilteredCities] = useState([]); // 필터링된 도시\n\n  const handleSearchChange = event => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    if (value) {\n      const filtered = cities.filter(city => city.toLowerCase().includes(value.toLowerCase()));\n      setFilteredCities(filtered);\n    } else {\n      setFilteredCities([]);\n    }\n  };\n  const selectCity = city => {\n    setSearchTerm(city); // 선택된 도시로 검색어 업데이트\n    setFilteredCities([]); // 필터링 초기화\n    onCitySelect(city); // 선택된 도시를 상위 컴포넌트에 전달\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleSearchChange,\n      placeholder: \"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), filteredCities.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredCities.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => selectCity(city),\n        children: city\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(CitySelector, \"ibovBWCSOjvkuPIBpCpE33XWO44=\");\n_c = CitySelector;\nexport default CitySelector;\nvar _c;\n$RefreshReg$(_c, \"CitySelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","cityMapping","CitySelector","onCitySelect","_s","cities","Object","keys","searchTerm","setSearchTerm","filteredCities","setFilteredCities","handleSearchChange","event","value","target","filtered","filter","city","toLowerCase","includes","selectCity","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClick","_c","$RefreshReg$"],"sources":["D:/project/react_project/src/components/CitySelector.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst cityMapping = {\r\n    '서울': 'Seoul',\r\n    '인천': 'Incheon',\r\n    '부산': 'Busan',\r\n    // 추가 도시...\r\n};\r\n\r\nfunction CitySelector({ onCitySelect }) {\r\n    const [cities] = useState(Object.keys(cityMapping)); // 도시 목록\r\n    const [searchTerm, setSearchTerm] = useState(''); // 검색어\r\n    const [filteredCities, setFilteredCities] = useState([]); // 필터링된 도시\r\n\r\n    const handleSearchChange = (event) => {\r\n        const value = event.target.value;\r\n        setSearchTerm(value);\r\n\r\n        if (value) {\r\n            const filtered = cities.filter(city =>\r\n                city.toLowerCase().includes(value.toLowerCase())\r\n            );\r\n            setFilteredCities(filtered);\r\n        } else {\r\n            setFilteredCities([]);\r\n        }\r\n    };\r\n\r\n    const selectCity = (city) => {\r\n        setSearchTerm(city); // 선택된 도시로 검색어 업데이트\r\n        setFilteredCities([]); // 필터링 초기화\r\n        onCitySelect(city); // 선택된 도시를 상위 컴포넌트에 전달\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={searchTerm}\r\n                onChange={handleSearchChange}\r\n                placeholder=\"도시를 입력하세요\"\r\n            />\r\n            {filteredCities.length > 0 && (\r\n                <ul>\r\n                    {filteredCities.map((city, index) => (\r\n                        <li key={index} onClick={() => selectCity(city)}>\r\n                            {city}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CitySelector;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAG;EAChB,IAAI,EAAE,OAAO;EACb,IAAI,EAAE,SAAS;EACf,IAAI,EAAE;EACN;AACJ,CAAC;AAED,SAASC,YAAYA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,CAAC,GAAGP,QAAQ,CAACQ,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1D,MAAMc,kBAAkB,GAAIC,KAAK,IAAK;IAClC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCL,aAAa,CAACK,KAAK,CAAC;IAEpB,IAAIA,KAAK,EAAE;MACP,MAAME,QAAQ,GAAGX,MAAM,CAACY,MAAM,CAACC,IAAI,IAC/BA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CACnD,CAAC;MACDR,iBAAiB,CAACK,QAAQ,CAAC;IAC/B,CAAC,MAAM;MACHL,iBAAiB,CAAC,EAAE,CAAC;IACzB;EACJ,CAAC;EAED,MAAMU,UAAU,GAAIH,IAAI,IAAK;IACzBT,aAAa,CAACS,IAAI,CAAC,CAAC,CAAC;IACrBP,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;IACvBR,YAAY,CAACe,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACIlB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEN,UAAW;MAClBgB,QAAQ,EAAEZ,kBAAmB;MAC7Ba,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDnB,cAAc,CAACoB,MAAM,GAAG,CAAC,iBACtB9B,OAAA;MAAAsB,QAAA,EACKZ,cAAc,CAACqB,GAAG,CAAC,CAACb,IAAI,EAAEc,KAAK,kBAC5BhC,OAAA;QAAgBiC,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAACH,IAAI,CAAE;QAAAI,QAAA,EAC3CJ;MAAI,GADAc,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACzB,EAAA,CA5CQF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA8CrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}