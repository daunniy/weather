{"ast":null,"code":"var _jsxFileName = \"/Volumes/dang/Project/react_project/src/pages/WeatherPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  text-align: center;\n`;\n_c = Container;\nconst Button = styled.button`\n  text-indent:-9999px;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  position: fixed;\n  right: 15px;\n  top: 20px;\n`;\n_c2 = Button;\nconst LoadingSpinner = styled.div`\n  position: absolute;\n  top: 50%;\n  width: 300px;\n  left: 50%;\n  margin-left: -150px;\n  height: 3px;\n  background: rgba(255, 255, 255, .1);\n  &:before {\n    animation: progress1 4s infinite;\n    transform-origin: 0 0;\n    content: \"\";\n    display: block;\n    width: 300px;\n    height: 100%;\n    background: linear-gradient(to right, rgba(255, 255, 255, 0.1) 10%, rgba(255, 255, 255, 0.4) 80%, rgba(255, 255, 255, 1));\n  }\n  &:after {\n    content: \"\";\n    position: absolute;\n    animation: progress2 4s infinite;\n    transform-origin: 90% 50%;\n    margin-left: -24px;\n    top: -9px;\n    width: 30px;\n    height: 21px;\n    border-radius: 2px;\n    background: rgba(210, 189, 255, .55);\n    filter: blur(8px);\n    box-shadow: 0 0 10px 6px rgba(210, 189, 255, .4),\n                -20px 0 15px 4px rgba(210, 189, 255, .3),\n                -40px 0 15px 2px rgba(210, 189, 255, .2),\n                -60px 0 10px 1px rgba(210, 189, 255, .1),\n                -80px 0 10px 1px rgba(210, 189, 255, .05);\n  }\n  @keyframes progress1 {\n    0% {\n      transform: scalex(0);\n      opacity: .5;\n    }\n    90% {\n      transform: scalex(1);\n      opacity: 1;\n    }\n    100% {\n      transform: scalex(1);\n      opacity: 0;\n    }\n  }\n  \n  @keyframes progress2 {\n    0% {\n      transform: scale(.3, .8) translatez(0);\n      opacity: 0;\n    }\n    90% {\n      transform: scale(1, 1) translatex(300px) translatez(0);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1, 1) translatex(300px) translatez(0);\n      opacity: 0;\n    }\n  }\n`;\n_c3 = LoadingSpinner;\nconst cityMapping = {\n  '서울': 'Seoul',\n  '인천': 'Incheon',\n  '수원': 'Suwon-si',\n  '성남': 'Seongnam-si',\n  '고양': 'Goyang-si',\n  '부산': 'Busan',\n  '대구': 'Daegu',\n  '광주': 'Gwangju',\n  '대전': 'Daejeon',\n  '울산': 'Ulsan',\n  '세종': 'Sejong'\n};\nfunction WeatherPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    city\n  } = useParams();\n  const [weatherData, setWeatherData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [forecastData, setForecastData] = useState(null);\n  const now = Date.now();\n  const twentyFourHoursLater = now + 24 * 60 * 60 * 1000; // 현재 시간 + 24시간\n  const [backgroundClass, setBackgroundClass] = useState('default');\n  useEffect(() => {\n    if (weatherData) {\n      const weatherDescription = weatherData.weather[0].description;\n      const currentHour = new Date().getHours();\n      const newBackgroundClass = getBackgroundClass(weatherDescription, currentHour);\n      setBackgroundClass(newBackgroundClass); // 배경 클래스 상태 업데이트\n    }\n  }, [weatherData]);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setIsLoading(true);\n      const apiKey = '28e07dfa61cced0cd42f9dc297ccc2f8'; // 나의 apiKey\n      const mappedCity = cityMapping[city] || city;\n      try {\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n          params: {\n            q: `${mappedCity},KR`,\n            appid: apiKey,\n            units: 'metric',\n            lang: 'kr'\n          }\n        });\n        const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast`, {\n          params: {\n            q: `${mappedCity},KR`,\n            appid: apiKey,\n            units: 'metric',\n            lang: 'kr'\n          }\n        });\n        setWeatherData(weatherResponse.data);\n        setForecastData(forecastResponse.data);\n      } catch (error) {\n        alert(error.response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchWeather();\n  }, [city]);\n  const backMove = () => {\n    navigate('/');\n  };\n  function getBackgroundClass(weather, hour) {\n    if (weather === 'clear sky') {\n      return hour >= 6 && hour < 18 ? 'day-clear' : 'night-clear';\n    } else if (weather === 'rain' || weather === 'light rain') {\n      return 'rainy';\n    } else if (weather === 'snow') {\n      return 'snowy';\n    } else if (weather.includes('cloud')) {\n      return hour >= 6 && hour < 18 ? 'day-cloudy' : 'night-cloudy';\n    } else {\n      return 'default';\n    }\n  }\n  function getCustomWeatherDescription(description) {\n    switch (description) {\n      case '맑음':\n        return '맑은 하늘';\n      case '튼구름':\n        return '구름 많음';\n      case '실 비':\n        return '가벼운 비';\n      default:\n        return description;\n      // 기본적으로 원래의 설명을 사용\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `background ${backgroundClass}`,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"weatherpage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${city}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }, this), weatherData && forecastData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"currentTemp\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`,\n              alt: weatherData.weather[0].description,\n              style: {\n                width: '120px',\n                height: '120px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [Math.round(weatherData.main.temp), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: getCustomWeatherDescription(weatherData.weather[0].description)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uCD5C\\uC800 : \", Math.round(weatherData.main.temp_min), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uCD5C\\uACE0 : \", Math.round(weatherData.main.temp_max), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scroll-container\",\n              children: forecastData.list.filter(forecast => forecast.dt * 1000 >= now && forecast.dt * 1000 <= twentyFourHoursLater) // 현재 시간과 24시간 이후의 데이터만 필터링\n              .map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: new Date(forecast.dt * 1000).toLocaleTimeString([], {\n                      hour: '2-digit',\n                      hour12: false\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 20\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`,\n                  alt: forecast.weather[0].description,\n                  style: {\n                    width: '50px',\n                    height: '50px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [Math.round(forecast.main.temp), \"\\xB0C \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 17\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"week\",\n          children: forecastData.list.filter((_, index) => index % 8 === 0).map((forecast, index) => {\n            const forecastDate = new Date(forecast.dt * 1000); // 예보 날짜\n            const isToday = forecastDate.toDateString() === new Date().toDateString(); // 오늘인지 확인\n            const options = {\n              weekday: 'long'\n            }; // 요일 포맷 설정\n            const displayDate = isToday ? '오늘' : forecastDate.toLocaleDateString(undefined, options); // 오늘은 '오늘', 나머지는 요일로 표시\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: displayDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: new Date(forecast.dt * 1000).toLocaleDateString(undefined, {\n                    month: '2-digit',\n                    day: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`,\n                alt: weatherData.weather[0].description,\n                style: {\n                  width: '50px',\n                  height: '50px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(forecast.main.temp_min), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(forecast.main.temp_max), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB0A0\\uC528 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: backMove,\n        className: \"more\",\n        children: \"\\uB4A4\\uB85C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherPage, \"3QURdpevZ01SEgKGu9FKkdqLnPc=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c4 = WeatherPage;\nexport default WeatherPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"LoadingSpinner\");\n$RefreshReg$(_c4, \"WeatherPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useParams","styled","jsxDEV","_jsxDEV","Container","div","_c","Button","button","_c2","LoadingSpinner","_c3","cityMapping","WeatherPage","_s","navigate","city","weatherData","setWeatherData","isLoading","setIsLoading","forecastData","setForecastData","now","Date","twentyFourHoursLater","backgroundClass","setBackgroundClass","weatherDescription","weather","description","currentHour","getHours","newBackgroundClass","getBackgroundClass","fetchWeather","apiKey","mappedCity","weatherResponse","get","params","q","appid","units","lang","forecastResponse","data","error","alert","response","message","backMove","hour","includes","getCustomWeatherDescription","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","style","width","height","Math","round","main","temp","temp_min","temp_max","list","filter","forecast","dt","map","index","toLocaleTimeString","hour12","_","forecastDate","isToday","toDateString","options","weekday","displayDate","toLocaleDateString","undefined","month","day","onClick","_c4","$RefreshReg$"],"sources":["/Volumes/dang/Project/react_project/src/pages/WeatherPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  text-indent:-9999px;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  position: fixed;\r\n  right: 15px;\r\n  top: 20px;\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  width: 300px;\r\n  left: 50%;\r\n  margin-left: -150px;\r\n  height: 3px;\r\n  background: rgba(255, 255, 255, .1);\r\n  &:before {\r\n    animation: progress1 4s infinite;\r\n    transform-origin: 0 0;\r\n    content: \"\";\r\n    display: block;\r\n    width: 300px;\r\n    height: 100%;\r\n    background: linear-gradient(to right, rgba(255, 255, 255, 0.1) 10%, rgba(255, 255, 255, 0.4) 80%, rgba(255, 255, 255, 1));\r\n  }\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    animation: progress2 4s infinite;\r\n    transform-origin: 90% 50%;\r\n    margin-left: -24px;\r\n    top: -9px;\r\n    width: 30px;\r\n    height: 21px;\r\n    border-radius: 2px;\r\n    background: rgba(210, 189, 255, .55);\r\n    filter: blur(8px);\r\n    box-shadow: 0 0 10px 6px rgba(210, 189, 255, .4),\r\n                -20px 0 15px 4px rgba(210, 189, 255, .3),\r\n                -40px 0 15px 2px rgba(210, 189, 255, .2),\r\n                -60px 0 10px 1px rgba(210, 189, 255, .1),\r\n                -80px 0 10px 1px rgba(210, 189, 255, .05);\r\n  }\r\n  @keyframes progress1 {\r\n    0% {\r\n      transform: scalex(0);\r\n      opacity: .5;\r\n    }\r\n    90% {\r\n      transform: scalex(1);\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      transform: scalex(1);\r\n      opacity: 0;\r\n    }\r\n  }\r\n  \r\n  @keyframes progress2 {\r\n    0% {\r\n      transform: scale(.3, .8) translatez(0);\r\n      opacity: 0;\r\n    }\r\n    90% {\r\n      transform: scale(1, 1) translatex(300px) translatez(0);\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      transform: scale(1, 1) translatex(300px) translatez(0);\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst cityMapping = {\r\n  '서울': 'Seoul',\r\n  '인천': 'Incheon',\r\n  '수원': 'Suwon-si',\r\n  '성남': 'Seongnam-si',\r\n  '고양': 'Goyang-si',\r\n  '부산': 'Busan',\r\n  '대구': 'Daegu',\r\n  '광주': 'Gwangju',\r\n  '대전': 'Daejeon',\r\n  '울산': 'Ulsan',\r\n  '세종': 'Sejong'\r\n};\r\n\r\nfunction WeatherPage() {\r\n  const navigate = useNavigate();\r\n  const { city } = useParams();\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [forecastData, setForecastData] = useState(null);\r\n  const now = Date.now();\r\n  const twentyFourHoursLater = now + 24 * 60 * 60 * 1000; // 현재 시간 + 24시간\r\n  const [backgroundClass, setBackgroundClass] = useState('default');\r\n\r\n  useEffect(() => {\r\n    if (weatherData) {\r\n      const weatherDescription = weatherData.weather[0].description;\r\n      const currentHour = new Date().getHours();\r\n      const newBackgroundClass = getBackgroundClass(weatherDescription, currentHour);\r\n      setBackgroundClass(newBackgroundClass); // 배경 클래스 상태 업데이트\r\n    }\r\n  }, [weatherData]);\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      setIsLoading(true);\r\n      const apiKey = '28e07dfa61cced0cd42f9dc297ccc2f8'; // 나의 apiKey\r\n      const mappedCity = cityMapping[city] || city;\r\n\r\n      try {\r\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\r\n          params: {\r\n            q: `${mappedCity},KR`,\r\n            appid: apiKey,\r\n            units: 'metric',\r\n            lang: 'kr',\r\n          }\r\n        });\r\n        const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast`, {\r\n          params: {\r\n            q: `${mappedCity},KR`,\r\n            appid: apiKey,\r\n            units: 'metric',\r\n            lang: 'kr',\r\n          }\r\n        });\r\n        setWeatherData(weatherResponse.data);\r\n        setForecastData(forecastResponse.data);\r\n      } catch (error) {\r\n        alert(error.response.data.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchWeather();\r\n  }, [city]);\r\n\r\n  const backMove = () => {\r\n    navigate('/');\r\n  }\r\n\r\n\r\n  function getBackgroundClass(weather, hour) {\r\n    if (weather === 'clear sky') {\r\n      return hour >= 6 && hour < 18 ? 'day-clear' : 'night-clear';\r\n    } else if (weather === 'rain' || weather === 'light rain') {\r\n      return 'rainy';\r\n    } else if (weather === 'snow') {\r\n      return 'snowy';\r\n    } else if (weather.includes('cloud')) {\r\n      return hour >= 6 && hour < 18 ? 'day-cloudy' : 'night-cloudy';\r\n    } else {\r\n      return 'default';\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  function getCustomWeatherDescription(description) {\r\n    switch (description) {\r\n      case '맑음':\r\n        return '맑은 하늘';\r\n      case '튼구름':\r\n        return '구름 많음';\r\n      case '실 비':\r\n        return '가벼운 비';\r\n      default:\r\n        return description; // 기본적으로 원래의 설명을 사용\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`background ${backgroundClass}`}>\r\n    <Container className=\"weatherpage\">\r\n      <h2>{`${city}`}</h2>\r\n      {weatherData && forecastData ? (\r\n        <div>\r\n          <div className=\"today\">\r\n            <div className='currentTemp'>\r\n              <img src={`https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`} alt={weatherData.weather[0].description} style={{ width: '120px', height: '120px' }} />\r\n              <p>{Math.round(weatherData.main.temp)}&deg;</p>\r\n            </div>\r\n            <h3>{getCustomWeatherDescription(weatherData.weather[0].description)}</h3>\r\n            <div className='temp'>\r\n              <p>최저 : {Math.round(weatherData.main.temp_min)}&deg;</p>\r\n              <p>최고 : {Math.round(weatherData.main.temp_max)}&deg;</p>\r\n            </div>\r\n            <div className=\"hour\">\r\n            <div className=\"scroll-container\">\r\n            {\r\n          forecastData.list\r\n            .filter((forecast) => forecast.dt * 1000 >= now && forecast.dt * 1000 <= twentyFourHoursLater) // 현재 시간과 24시간 이후의 데이터만 필터링\r\n            .map((forecast, index) => (\r\n              <div key={index} className=\"forecast\">\r\n                <p><strong>{new Date(forecast.dt * 1000).toLocaleTimeString([], { hour: '2-digit', hour12: false })}</strong></p>\r\n                <img src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`} alt={forecast.weather[0].description} style={{ width: '50px', height: '50px' }} />\r\n                <p>{Math.round(forecast.main.temp)}&deg;C </p>\r\n              </div>\r\n            ))\r\n            }\r\n      </div>\r\n    </div>\r\n          </div>\r\n          <div className=\"week\">\r\n            {\r\n              forecastData.list.filter((_, index) => index % 8 === 0).map((forecast, index) => {\r\n                const forecastDate = new Date(forecast.dt * 1000); // 예보 날짜\r\n                const isToday = forecastDate.toDateString() === new Date().toDateString(); // 오늘인지 확인\r\n                const options = { weekday: 'long' }; // 요일 포맷 설정\r\n                const displayDate = isToday ? '오늘' : forecastDate.toLocaleDateString(undefined, options); // 오늘은 '오늘', 나머지는 요일로 표시\r\n                return (\r\n                  <div key={index} className=\"forecast\">\r\n                    <div className=\"day\">\r\n                      <p><strong>{displayDate}</strong></p>\r\n                      <p>{new Date(forecast.dt * 1000).toLocaleDateString(undefined, { month: '2-digit', day: '2-digit' })}</p>\r\n                    </div>\r\n                    <img src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`} alt={weatherData.weather[0].description} style={{ width: '50px', height: '50px' }} />\r\n                    <p>{Math.round(forecast.main.temp_min)}&deg;</p>\r\n                    <p>{Math.round(forecast.main.temp_max)}&deg;</p>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loading\">\r\n          <LoadingSpinner />\r\n          <p>날씨 정보를 불러오는 중입니다...</p>\r\n        </div>\r\n      )}\r\n      <Button onClick={backMove} className=\"more\">뒤로</Button>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default WeatherPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}