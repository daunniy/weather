{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react_project\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst citiesRegion = {\n  서울: ['서울'],\n  인천: ['인천'],\n  경기: ['인천', '수원', '성남', '고양'],\n  부산: ['부산'],\n  대구: ['대구'],\n  울산: ['울산'],\n  세종: ['세종'],\n  광주: ['광주'],\n  대전: ['대전'],\n  강릉: ['강릉']\n};\nconst Container = styled.div`\n  text-align: center;\n`;\n_c = Container;\nconst Input = styled.input`\n  padding: 10px;\n  margin: 20px 0;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n_c2 = Input;\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cityInput, setCityInput] = useState(''); // 입력 필드의 상태\n\n  useEffect(() => {\n    const savedRegion = localStorage.getItem('selectedRegion');\n    const savedCity = localStorage.getItem('selectedCity');\n    if (savedRegion) {\n      setSelectedRegion(savedRegion);\n    }\n    if (savedCity) setSelectedCity(savedCity);\n  }, []);\n  const handleCityChange = e => {\n    setCityInput(e.target.value);\n  };\n  const handleCitySelect = () => {\n    const city = cityInput.trim();\n    if (city) {\n      setSelectedCity(city);\n      localStorage.setItem('selectedCity', city);\n      localStorage.setItem('selectedRegion', selectedRegion);\n      navigate(`/weather/${selectedRegion}/${city}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB0A0\\uC528 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"\\uB3C4\\uC2DC \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: cityInput,\n      onChange: handleCityChange,\n      onKeyPress: e => {\n        if (e.key === 'Enter') {\n          handleCitySelect(); // Enter 키를 눌렀을 때 도시 선택\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCitySelect,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"/8ovjFk/TvSniLENHvSe9rtiY7E=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Home;\nexport default Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","axios","jsxDEV","_jsxDEV","citiesRegion","서울","인천","경기","부산","대구","울산","세종","광주","대전","강릉","Container","div","_c","Input","input","_c2","Home","_s","navigate","selectedRegion","setSelectedRegion","selectedCity","setSelectedCity","cityInput","setCityInput","savedRegion","localStorage","getItem","savedCity","handleCityChange","e","target","value","handleCitySelect","city","trim","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyPress","key","onClick","_c3","$RefreshReg$"],"sources":["D:/project/react_project/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst citiesRegion = {\r\n  서울: ['서울'],\r\n  인천: ['인천'],\r\n  경기: ['인천', '수원', '성남', '고양'],\r\n  부산: ['부산'],\r\n  대구: ['대구'],\r\n  울산: ['울산'],\r\n  세종: ['세종'],\r\n  광주: ['광주'],\r\n  대전: ['대전'],\r\n  강릉: ['강릉'],\r\n};\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  margin: 20px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n`;\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const [selectedRegion, setSelectedRegion] = useState('');\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n  const [cityInput, setCityInput] = useState(''); // 입력 필드의 상태\r\n\r\n  useEffect(() => {\r\n    const savedRegion = localStorage.getItem('selectedRegion');\r\n    const savedCity = localStorage.getItem('selectedCity');\r\n    if (savedRegion) {\r\n      setSelectedRegion(savedRegion);\r\n    }\r\n    if (savedCity) setSelectedCity(savedCity);\r\n  }, []);\r\n\r\n  const handleCityChange = (e) => {\r\n    setCityInput(e.target.value);\r\n  };\r\n\r\n  const handleCitySelect = () => {\r\n    const city = cityInput.trim();\r\n    if (city) {\r\n      setSelectedCity(city);\r\n      localStorage.setItem('selectedCity', city);\r\n      localStorage.setItem('selectedRegion', selectedRegion);\r\n      navigate(`/weather/${selectedRegion}/${city}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"home\">\r\n      <h1>날씨 애플리케이션</h1>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"도시 이름을 입력하세요\"\r\n        value={cityInput}\r\n        onChange={handleCityChange}\r\n        onKeyPress={(e) => {\r\n          if (e.key === 'Enter') {\r\n            handleCitySelect(); // Enter 키를 눌렀을 때 도시 선택\r\n          }\r\n        }}\r\n      />\r\n      <button onClick={handleCitySelect}>검색</button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}