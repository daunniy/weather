{"ast":null,"code":"export const validateCartItem = item => {\n  if (!item.id && item.id !== 0) throw new Error(`제품은 구분아이디가 필요합니다. :${item.id}`);\n  //id가 undefined또는 null일 경우 새로운 오류객체 생성한 뒤 던짐 - 전달\n  if (!item.name) throw new Error(`Item must have a name. Received: ${item.name}`);\n  if (!item.price && item.price !== 0) throw new Error(`Item must have a price. Received: ${item.price}`);\n  if (!item.quantity || item.quantity < 1) throw new Error(`Item must have a valid quantity. Received: ${item.quantity}`);\n  if (!item.selectedColor) throw new Error(`Item must have a selected color. Received: ${item.selectedColor}`);\n  if (!item.selectedSize) throw new Error(`Item must have a selected size. Received: ${item.selectedSize}`);\n};\nexport const calculateItemTotal = item => {\n  const price = Number(item.discountPrice || item.price) || 0;\n  return price * (item.quantity || 1);\n};\nexport const calculateCartTotal = items => {\n  if (!Array.isArray(items)) return 0;\n  return items.reduce((total, item) => total + calculateItemTotal(item), 0);\n};","map":{"version":3,"names":["validateCartItem","item","id","Error","name","price","quantity","selectedColor","selectedSize","calculateItemTotal","Number","discountPrice","calculateCartTotal","items","Array","isArray","reduce","total"],"sources":["/Volumes/dang/Project/react_project/src/utils/cartUtils.js"],"sourcesContent":["export const validateCartItem=(item)=>{\r\n  if(!item.id && item.id !== 0) throw new Error(`제품은 구분아이디가 필요합니다. :${item.id}`);\r\n  //id가 undefined또는 null일 경우 새로운 오류객체 생성한 뒤 던짐 - 전달\r\n  if (!item.name) throw new Error(`Item must have a name. Received: ${item.name}`);\r\n  if (!item.price && item.price !== 0) throw new Error(`Item must have a price. Received: ${item.price}`);\r\n  if (!item.quantity || item.quantity < 1) throw new Error(`Item must have a valid quantity. Received: ${item.quantity}`);\r\n  if (!item.selectedColor) throw new Error(`Item must have a selected color. Received: ${item.selectedColor}`);\r\n  if (!item.selectedSize) throw new Error(`Item must have a selected size. Received: ${item.selectedSize}`);\r\n};\r\n\r\nexport const calculateItemTotal=(item)=>{\r\n  const price = Number(item.discountPrice || item.price) || 0;\r\n  return price * (item.quantity || 1);\r\n};\r\n\r\nexport const calculateCartTotal=(items)=>{\r\n  if (!Array.isArray(items)) return 0;\r\n  return items.reduce((total, item) => total + calculateItemTotal(item), 0);\r\n}"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAEC,IAAI,IAAG;EACpC,IAAG,CAACA,IAAI,CAACC,EAAE,IAAID,IAAI,CAACC,EAAE,KAAK,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsBF,IAAI,CAACC,EAAE,EAAE,CAAC;EAC9E;EACA,IAAI,CAACD,IAAI,CAACG,IAAI,EAAE,MAAM,IAAID,KAAK,CAAC,oCAAoCF,IAAI,CAACG,IAAI,EAAE,CAAC;EAChF,IAAI,CAACH,IAAI,CAACI,KAAK,IAAIJ,IAAI,CAACI,KAAK,KAAK,CAAC,EAAE,MAAM,IAAIF,KAAK,CAAC,qCAAqCF,IAAI,CAACI,KAAK,EAAE,CAAC;EACvG,IAAI,CAACJ,IAAI,CAACK,QAAQ,IAAIL,IAAI,CAACK,QAAQ,GAAG,CAAC,EAAE,MAAM,IAAIH,KAAK,CAAC,8CAA8CF,IAAI,CAACK,QAAQ,EAAE,CAAC;EACvH,IAAI,CAACL,IAAI,CAACM,aAAa,EAAE,MAAM,IAAIJ,KAAK,CAAC,8CAA8CF,IAAI,CAACM,aAAa,EAAE,CAAC;EAC5G,IAAI,CAACN,IAAI,CAACO,YAAY,EAAE,MAAM,IAAIL,KAAK,CAAC,6CAA6CF,IAAI,CAACO,YAAY,EAAE,CAAC;AAC3G,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAER,IAAI,IAAG;EACtC,MAAMI,KAAK,GAAGK,MAAM,CAACT,IAAI,CAACU,aAAa,IAAIV,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC;EAC3D,OAAOA,KAAK,IAAIJ,IAAI,CAACK,QAAQ,IAAI,CAAC,CAAC;AACrC,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAEC,KAAK,IAAG;EACvC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE,OAAO,CAAC;EACnC,OAAOA,KAAK,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEhB,IAAI,KAAKgB,KAAK,GAAGR,kBAAkB,CAACR,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}