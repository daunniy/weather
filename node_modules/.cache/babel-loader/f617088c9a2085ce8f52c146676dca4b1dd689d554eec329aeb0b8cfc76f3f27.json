{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{useNavigate,useParams}from'react-router-dom';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div`\n  text-align: center;\n`;const Button=styled.button`\n  text-indent:-9999px;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  position: fixed;\n  right: 15px;\n  top: 20px;\n`;const LoadingSpinner=styled.div`\n  position: absolute;\n  top: 50%;\n  width: 300px;\n  left: 50%;\n  margin-left: -150px;\n  height: 3px;\n  background: rgba(255, 255, 255, .1);\n  &:before {\n    animation: progress1 4s infinite;\n    transform-origin: 0 0;\n    content: \"\";\n    display: block;\n    width: 300px;\n    height: 100%;\n    background: linear-gradient(to right, rgba(255, 255, 255, 0.1) 10%, rgba(255, 255, 255, 0.4) 80%, rgba(255, 255, 255, 1));\n  }\n  &:after {\n    content: \"\";\n    position: absolute;\n    animation: progress2 4s infinite;\n    transform-origin: 90% 50%;\n    margin-left: -24px;\n    top: -9px;\n    width: 30px;\n    height: 21px;\n    border-radius: 2px;\n    background: rgba(210, 189, 255, .55);\n    filter: blur(8px);\n    box-shadow: 0 0 10px 6px rgba(210, 189, 255, .4),\n                -20px 0 15px 4px rgba(210, 189, 255, .3),\n                -40px 0 15px 2px rgba(210, 189, 255, .2),\n                -60px 0 10px 1px rgba(210, 189, 255, .1),\n                -80px 0 10px 1px rgba(210, 189, 255, .05);\n  }\n  @keyframes progress1 {\n    0% {\n      transform: scalex(0);\n      opacity: .5;\n    }\n    90% {\n      transform: scalex(1);\n      opacity: 1;\n    }\n    100% {\n      transform: scalex(1);\n      opacity: 0;\n    }\n  }\n  \n  @keyframes progress2 {\n    0% {\n      transform: scale(.3, .8) translatez(0);\n      opacity: 0;\n    }\n    90% {\n      transform: scale(1, 1) translatex(300px) translatez(0);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1, 1) translatex(300px) translatez(0);\n      opacity: 0;\n    }\n  }\n`;const cityMapping={'서울':'Seoul','인천':'Incheon','수원':'Suwon-si','성남':'Seongnam-si','고양':'Goyang-si','부산':'Busan','대구':'Daegu','광주':'Gwangju','대전':'Daejeon','울산':'Ulsan','세종':'Sejong'};function getTodayMinMaxTemp(forecastData){const today=new Date().toDateString();// 오늘 날짜 가져오기\nconst todayForecasts=forecastData.list.filter(forecast=>{const forecastDate=new Date(forecast.dt*1000).toDateString();return forecastDate===today;// 오늘 날짜만 필터링\n});const minTemp=Math.min(...todayForecasts.map(forecast=>forecast.main.temp_min));const maxTemp=Math.max(...todayForecasts.map(forecast=>forecast.main.temp_max));return{minTemp,maxTemp};}function WeatherPage(){const navigate=useNavigate();const{city}=useParams();const[weatherData,setWeatherData]=useState(null);const[minMaxTemp,setMinMaxTemp]=useState({minTemp:null,maxTemp:null});const[isLoading,setIsLoading]=useState(false);const[forecastData,setForecastData]=useState(null);const now=Date.now();const twentyFourHoursLater=now+24*60*60*1000;// 현재 시간 + 24시간\nconst[backgroundClass,setBackgroundClass]=useState('default');useEffect(()=>{const fetchWeather=async()=>{setIsLoading(true);const apiKey='28e07dfa61cced0cd42f9dc297ccc2f8';// 나의 apiKey\nconst mappedCity=cityMapping[city]||city;try{const weatherResponse=await axios.get(`https://api.openweathermap.org/data/2.5/weather`,{params:{q:`${mappedCity},KR`,appid:apiKey,units:'metric',lang:'kr'}});const forecastResponse=await axios.get(`https://api.openweathermap.org/data/2.5/forecast`,{params:{q:`${mappedCity},KR`,appid:apiKey,units:'metric',lang:'kr'}});setWeatherData(weatherResponse.data);setForecastData(forecastResponse.data);}catch(error){alert(error.response.data.message);}finally{setIsLoading(false);}};fetchWeather();},[city]);const backMove=()=>{navigate('/');};useEffect(()=>{if(forecastData){const{minTemp,maxTemp}=getTodayMinMaxTemp(forecastData);setMinMaxTemp({minTemp,maxTemp});}},[forecastData]);function getCustomWeatherDescription(description){switch(description){case'맑음':return'맑은 하늘';case'튼구름':return'구름 많음';case'실 비':return'가벼운 비';default:return description;// 기본적으로 원래의 설명을 사용\n}}useEffect(()=>{const hour=new Date().getHours();const newBackgroundClass=getBackgroundClassByTime(hour);setBackgroundClass(newBackgroundClass);},[]);function getBackgroundClassByTime(hour){return hour>=6&&hour<18?'daytime':'nighttime';}return/*#__PURE__*/_jsx(\"div\",{className:`background ${backgroundClass}`,children:/*#__PURE__*/_jsxs(Container,{className:\"weatherpage\",children:[/*#__PURE__*/_jsx(\"h2\",{children:`${city}`}),weatherData&&forecastData?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"today\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"currentTemp\",children:[/*#__PURE__*/_jsx(\"img\",{src:`https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`,alt:weatherData.weather[0].description,style:{width:'120px',height:'120px'}}),/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(weatherData.main.temp),\"\\xB0\"]})]}),/*#__PURE__*/_jsx(\"h3\",{children:getCustomWeatherDescription(weatherData.weather[0].description)}),/*#__PURE__*/_jsxs(\"div\",{className:\"temp\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uCD5C\\uC800 : \",Math.round(minMaxTemp.minTemp),\"\\xB0\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uCD5C\\uACE0 : \",Math.round(minMaxTemp.maxTemp),\"\\xB0\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hour\",children:/*#__PURE__*/_jsx(\"div\",{className:\"scroll-container\",children:forecastData.list.filter(forecast=>forecast.dt*1000>=now&&forecast.dt*1000<=twentyFourHoursLater)// 현재 시간과 24시간 이후의 데이터만 필터링\n.map((forecast,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"forecast\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:new Date(forecast.dt*1000).toLocaleTimeString([],{hour:'2-digit',hour12:false})})}),/*#__PURE__*/_jsx(\"img\",{src:`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`,alt:forecast.weather[0].description,style:{width:'50px',height:'50px'}}),/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(forecast.main.temp),\"\\xB0C \"]})]},index))})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"week\",children:forecastData.list.filter((_,index)=>index%8===0).map((forecast,index)=>{const forecastDate=new Date(forecast.dt*1000);// 예보 날짜\nconst isToday=forecastDate.toDateString()===new Date().toDateString();// 오늘인지 확인\nconst options={weekday:'long'};// 요일 포맷 설정\nconst displayDate=isToday?'오늘':forecastDate.toLocaleDateString(undefined,options);// 오늘은 '오늘', 나머지는 요일로 표시\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"forecast\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"day\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:displayDate})}),/*#__PURE__*/_jsx(\"p\",{children:new Date(forecast.dt*1000).toLocaleDateString(undefined,{month:'2-digit',day:'2-digit'})})]}),/*#__PURE__*/_jsx(\"img\",{src:`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`,alt:weatherData.weather[0].description,style:{width:'50px',height:'50px'}}),/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(forecast.main.temp_min),\"\\xB0\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(forecast.main.temp_max),\"\\xB0\"]})]},index);})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(LoadingSpinner,{}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB0A0\\uC528 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"})]}),/*#__PURE__*/_jsx(Button,{onClick:backMove,className:\"more\",children:\"\\uB4A4\\uB85C\"})]})});}export default WeatherPage;","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useParams","styled","jsx","_jsx","jsxs","_jsxs","Container","div","Button","button","LoadingSpinner","cityMapping","getTodayMinMaxTemp","forecastData","today","Date","toDateString","todayForecasts","list","filter","forecast","forecastDate","dt","minTemp","Math","min","map","main","temp_min","maxTemp","max","temp_max","WeatherPage","navigate","city","weatherData","setWeatherData","minMaxTemp","setMinMaxTemp","isLoading","setIsLoading","setForecastData","now","twentyFourHoursLater","backgroundClass","setBackgroundClass","fetchWeather","apiKey","mappedCity","weatherResponse","get","params","q","appid","units","lang","forecastResponse","data","error","alert","response","message","backMove","getCustomWeatherDescription","description","hour","getHours","newBackgroundClass","getBackgroundClassByTime","className","children","src","weather","icon","alt","style","width","height","round","temp","index","toLocaleTimeString","hour12","_","isToday","options","weekday","displayDate","toLocaleDateString","undefined","month","day","onClick"],"sources":["/Volumes/dang/Project/react_project/src/pages/WeatherPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  text-indent:-9999px;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  position: fixed;\r\n  right: 15px;\r\n  top: 20px;\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  width: 300px;\r\n  left: 50%;\r\n  margin-left: -150px;\r\n  height: 3px;\r\n  background: rgba(255, 255, 255, .1);\r\n  &:before {\r\n    animation: progress1 4s infinite;\r\n    transform-origin: 0 0;\r\n    content: \"\";\r\n    display: block;\r\n    width: 300px;\r\n    height: 100%;\r\n    background: linear-gradient(to right, rgba(255, 255, 255, 0.1) 10%, rgba(255, 255, 255, 0.4) 80%, rgba(255, 255, 255, 1));\r\n  }\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    animation: progress2 4s infinite;\r\n    transform-origin: 90% 50%;\r\n    margin-left: -24px;\r\n    top: -9px;\r\n    width: 30px;\r\n    height: 21px;\r\n    border-radius: 2px;\r\n    background: rgba(210, 189, 255, .55);\r\n    filter: blur(8px);\r\n    box-shadow: 0 0 10px 6px rgba(210, 189, 255, .4),\r\n                -20px 0 15px 4px rgba(210, 189, 255, .3),\r\n                -40px 0 15px 2px rgba(210, 189, 255, .2),\r\n                -60px 0 10px 1px rgba(210, 189, 255, .1),\r\n                -80px 0 10px 1px rgba(210, 189, 255, .05);\r\n  }\r\n  @keyframes progress1 {\r\n    0% {\r\n      transform: scalex(0);\r\n      opacity: .5;\r\n    }\r\n    90% {\r\n      transform: scalex(1);\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      transform: scalex(1);\r\n      opacity: 0;\r\n    }\r\n  }\r\n  \r\n  @keyframes progress2 {\r\n    0% {\r\n      transform: scale(.3, .8) translatez(0);\r\n      opacity: 0;\r\n    }\r\n    90% {\r\n      transform: scale(1, 1) translatex(300px) translatez(0);\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      transform: scale(1, 1) translatex(300px) translatez(0);\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst cityMapping = {\r\n  '서울': 'Seoul',\r\n  '인천': 'Incheon',\r\n  '수원': 'Suwon-si',\r\n  '성남': 'Seongnam-si',\r\n  '고양': 'Goyang-si',\r\n  '부산': 'Busan',\r\n  '대구': 'Daegu',\r\n  '광주': 'Gwangju',\r\n  '대전': 'Daejeon',\r\n  '울산': 'Ulsan',\r\n  '세종': 'Sejong'\r\n};\r\n\r\nfunction getTodayMinMaxTemp(forecastData) {\r\n  const today = new Date().toDateString(); // 오늘 날짜 가져오기\r\n  const todayForecasts = forecastData.list.filter((forecast) => {\r\n    const forecastDate = new Date(forecast.dt * 1000).toDateString();\r\n    return forecastDate === today; // 오늘 날짜만 필터링\r\n  });\r\n\r\n  const minTemp = Math.min(...todayForecasts.map(forecast => forecast.main.temp_min));\r\n  const maxTemp = Math.max(...todayForecasts.map(forecast => forecast.main.temp_max));\r\n\r\n  return { minTemp, maxTemp };\r\n}\r\n\r\n\r\nfunction WeatherPage() {\r\n  const navigate = useNavigate();\r\n  const { city } = useParams();\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [minMaxTemp, setMinMaxTemp] = useState({ minTemp: null, maxTemp: null });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [forecastData, setForecastData] = useState(null);\r\n  const now = Date.now();\r\n  const twentyFourHoursLater = now + 24 * 60 * 60 * 1000; // 현재 시간 + 24시간\r\n  const [backgroundClass, setBackgroundClass] = useState('default');\r\n    \r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      setIsLoading(true);\r\n      const apiKey = '28e07dfa61cced0cd42f9dc297ccc2f8'; // 나의 apiKey\r\n      const mappedCity = cityMapping[city] || city;\r\n\r\n      try {\r\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\r\n          params: {\r\n            q: `${mappedCity},KR`,\r\n            appid: apiKey,\r\n            units: 'metric',\r\n            lang: 'kr',\r\n          }\r\n        });\r\n        const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast`, {\r\n          params: {\r\n            q: `${mappedCity},KR`,\r\n            appid: apiKey,\r\n            units: 'metric',\r\n            lang: 'kr',\r\n          }\r\n        });\r\n        setWeatherData(weatherResponse.data);\r\n        setForecastData(forecastResponse.data);\r\n      } catch (error) {\r\n        alert(error.response.data.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchWeather();\r\n  }, [city]);\r\n\r\n  const backMove = () => {\r\n    navigate('/');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (forecastData) {\r\n      const { minTemp, maxTemp } = getTodayMinMaxTemp(forecastData);\r\n      setMinMaxTemp({ minTemp, maxTemp });\r\n    }\r\n  }, [forecastData]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function getCustomWeatherDescription(description) {\r\n    switch (description) {\r\n      case '맑음':\r\n        return '맑은 하늘';\r\n      case '튼구름':\r\n        return '구름 많음';\r\n      case '실 비':\r\n        return '가벼운 비';\r\n      default:\r\n        return description; // 기본적으로 원래의 설명을 사용\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const hour = new Date().getHours();\r\n    const newBackgroundClass = getBackgroundClassByTime(hour);\r\n    setBackgroundClass(newBackgroundClass);\r\n  }, []);\r\n\r\n  function getBackgroundClassByTime(hour) {\r\n    return hour >= 6 && hour < 18 ? 'daytime' : 'nighttime';\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={`background ${backgroundClass}`}>\r\n    <Container className=\"weatherpage\">\r\n      <h2>{`${city}`}</h2>\r\n      {weatherData && forecastData ? (\r\n        <div>\r\n          <div className=\"today\">\r\n            <div className='currentTemp'>\r\n              <img src={`https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`} alt={weatherData.weather[0].description} style={{ width: '120px', height: '120px' }} />\r\n              <p>{Math.round(weatherData.main.temp)}&deg;</p>\r\n            </div>\r\n            <h3>{getCustomWeatherDescription(weatherData.weather[0].description)}</h3>\r\n            <div className='temp'>\r\n              <p>최저 : {Math.round(minMaxTemp.minTemp)}&deg;</p>\r\n              <p>최고 : {Math.round(minMaxTemp.maxTemp)}&deg;</p>\r\n            </div>\r\n            <div className=\"hour\">\r\n            <div className=\"scroll-container\">\r\n            {\r\n          forecastData.list\r\n            .filter((forecast) => forecast.dt * 1000 >= now && forecast.dt * 1000 <= twentyFourHoursLater) // 현재 시간과 24시간 이후의 데이터만 필터링\r\n            .map((forecast, index) => (\r\n              <div key={index} className=\"forecast\">\r\n                <p><strong>{new Date(forecast.dt * 1000).toLocaleTimeString([], { hour: '2-digit', hour12: false })}</strong></p>\r\n                <img src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`} alt={forecast.weather[0].description} style={{ width: '50px', height: '50px' }} />\r\n                <p>{Math.round(forecast.main.temp)}&deg;C </p>\r\n              </div>\r\n            ))\r\n            }\r\n      </div>\r\n    </div>\r\n          </div>\r\n          <div className=\"week\">\r\n            {\r\n              forecastData.list.filter((_, index) => index % 8 === 0).map((forecast, index) => {\r\n                const forecastDate = new Date(forecast.dt * 1000); // 예보 날짜\r\n                const isToday = forecastDate.toDateString() === new Date().toDateString(); // 오늘인지 확인\r\n                const options = { weekday: 'long' }; // 요일 포맷 설정\r\n                const displayDate = isToday ? '오늘' : forecastDate.toLocaleDateString(undefined, options); // 오늘은 '오늘', 나머지는 요일로 표시\r\n                return (\r\n                  <div key={index} className=\"forecast\">\r\n                    <div className=\"day\">\r\n                      <p><strong>{displayDate}</strong></p>\r\n                      <p>{new Date(forecast.dt * 1000).toLocaleDateString(undefined, { month: '2-digit', day: '2-digit' })}</p>\r\n                    </div>\r\n                    <img src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`} alt={weatherData.weather[0].description} style={{ width: '50px', height: '50px' }} />\r\n                    <p>{Math.round(forecast.main.temp_min)}&deg;</p>\r\n                    <p>{Math.round(forecast.main.temp_max)}&deg;</p>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loading\">\r\n          <LoadingSpinner />\r\n          <p>날씨 정보를 불러오는 중입니다...</p>\r\n        </div>\r\n      )}\r\n      <Button onClick={backMove} className=\"more\">뒤로</Button>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default WeatherPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}